접속하기 : 실행 - cmd - 'mysql -u 유저명 -p' 입력 - 비밀번호 입력 
DB조회 : show databases;
DB위치 지정 : use mysql;
테이블 확인 : show tables;
	     select * from user;
DB 생성
db생성(TUI) : create database testdb;
	      show databases;
table 생성(TUI) : use testdb;
		show tables;
show databases(DB확인)



--------------------------------------------



information_schema 
- 테이블, 컬럼, 권한 등 메타데이터가 저장

performance_schema 
- MYSQL 서버의 성능과 관련된 정보가 저장
- ex 스레드 정보, Lock Table, 쿼리 실행시간 등 ,,,

mysql 
- MYSQL 서버 자체를 관리하기 위한 스키마
- 사용자 정보, 권한 및 다양한 설정정보 저장 

sys
- Mysql 8.x 부터 도입된 DB
- 성능 모니터링 및 최적화를 위한 도구와 뷰를 제공

------------------------------------------------------

[ SQL의 분류 ]
DDL 
- Data Definition Language
- 데이터베이스 개체를 생성/삭제/변경하는 역할
- CREATE, DROP, ALTER ...

DML
- Data Manipulation Language
- 데이터를 조작(선택, 삽입, 수정, 삭제) 하는데 사용되는 언어
- SELECT, INSERT, UPDATE, DELETE ...

DCL
- Data Control Language
- 권한부여/철회에 사용되는 구문
- GRANT/REVOKE/DENY



DB 생성 : create database 데이터베이스명;

제약조건
pk(primary key) : null 을 허용하지 않음

tbl 구조 확인 : desc 테이블명

[ 참고 - create ]
user testdb;
create talbe 테이블명(
	컬럼명 자료형 제약조건,
	컬럼명 자료형 제약조건,
	컬럼명 자료형 제약조건 );


[ tbl 구조 변경하기 ]
column 추가 : alter table 테이블명 add column 컬럼명 자료형 제약조건
column 수정 : alter table 테이블명 change column 기존컬럼명 변경컬럼명 자료형 제약조건
column 삭제 : alter table 테이블명 drop 컬럼명


[ column 값 ]
삽입	: insert into 테이블명(열1,열2...) values(값1,값2...);
	  같은 테이블에 값을 더 추가할때는 'insert into 테이블명 values(값1, 값2 ...);'
수정	: update 테이블명 set 열이름=값,열이름=값 where 열이름=값;
삭제	: delete from 테이블명 where 열이름=값;
조회	: select * from 테이블명;




