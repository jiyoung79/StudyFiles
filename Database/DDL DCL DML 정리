[DDL 이란?]
테이블과 컬럼을 저의하는 명령어로 생성, 수정, 삭제 등의 데이터 전체 골격을 결정하는 역할을 담당한다.

[DDL 특징]
DDL은 명령어를 입력하는 순간 작업이 즉시 반영(Auto Commit)되기 때문에 사용할 때 주의해야 한다.

[DDL 종류]
CREATE : 테이블을 생성하는 역할
ALTER	: 테이블의 구조를 수정하는 역할
DROP : 테이블을 삭제하는 역할
RENAME : 테이블을 이름을 변경하는 역할

ALTER : 컬럼 변경 문법
ADD COLUMN : 컬럼을 추가하는 역할
DROP COLUMN	: 컬럼을 삭제하는 역할
MODIFY COLUMN	: 컬럼을 수정하는 역할
RENAME COLUMN	: 컬럼 이름을 변경하는 역할

[DML 이란?]
데이터베이스의 내부 데이터를 관리하기 위한 언어이다. 데이터를 조회, 추가, 변경, 삭제 등의 작업을 수행하기 위해 사용된다.

[DML 특징]
DDL과 달리 DML은 적는 즉시 반영(Auto Commit)이 되기 않는다. 다시 말해, DML에 의한 데이터 변동은 영구적인 변경이 아니기 때문에 ROLLBACK으로 다시 되돌릴 수 있다.

[DML 종류]
SELECT : 데이터베이스에서 데이터를 검색하는 역할
INSERT : 테이블에 데이터를 추가하는 역할
UPDATE : 테이블 내에 존재하는 데이터를 수정하는 역할
DELETE : 테이블에서 데이터를 삭제하는 역할

---------------------------------------------------------------------------------------------------------------------------

[CMD-DDL&DML]
Tbl구조 : desc 테이블명
삽입	: insert into 테이블명(열1,열2...) values(값1,값2...);
수정	: update 테이블명 set 열이름=값,열이름=값 where 열이름=값;
삭제	: delete from 테이블명 where 열이름=값;
조회	: select * from 테이블명;

DB 생성 : create database 테이터베이스명;
Tbl생성 : create table 테이블명(열1 자료형 [제약조건],열2 자료형 [제약조건]..);
Tbl구조 변경 : [열추가] alter table 테이블명 add column 열이름 자료형 [제약조건] [after 열이름]
Tbl구조 변경 : [열변경] alter table 테이블명 change column 기존열이름 바꿀열이름 자료형 [제약조건]
Tbl구조 변경 : [열삭제] alter table 테이블명 drop column 열이름

-------------------------------------------------------------------------------------------------------------------------

[DCL 이란 ?]
데이터를 관리 목적으로 보안, 무결성, 회복, 병행 제어 등을 정의하는데 사용한다. 
DCL을 사용하면 데이터베이스에 접근하여 읽거나 쓰는 것을 제한할 수 있는 권한을 부여하거나 박탈할 수 있고 트랜잭션을 명시하거나 조작할 수 있다.

[DCL의 특징]
불법적인 사용자로부터 데이터를 보호하기 위한 데이터 보안의 역할을 수행하며, 데이터의 정확성을 위한 무결성을 유지하기도 한다.
마지막으로 시스템 장애에 대비한 회복과 병행수행을 제어한다.

[DCL 종류]
-GRANT : 권한을 정의할때 사용하는 명령어
-REVOKE : 권한을 삭제할떄 사용하는 명령어


----------------------------------------------------------------------------------------------
CMD - DDL, DML EX)

--------------------
DB조회
--------------------
show databases;

--------------------
DB위치 지정
--------------------
use mysql;

--------------------
테이블 확인
--------------------
show tables;
select * from user;


--------------------
DB 생성
--------------------
db생성(TUI)
create database testdb;
show databases;


--------------------
Table 생성
--------------------
table 생성(GUI) - 생략

table 생성(TUI)
use testdb;
show tables;
mysql> create table tbl_user(
    -> user_id varchar(10) primary key,
    -> user_password varchar(100) not null,
    -> user_name varchar(45) not null );
Query OK, 0 rows affected (0.02 sec)

mysql> show tables;
+------------------+
| Tables_in_testdb |
+------------------+
| tbl_user         |
+------------------+
1 row in set (0.00 sec)

mysql> desc tbl_user;
+---------------+--------------+------+-----+---------+-------+
| Field         | Type         | Null | Key | Default | Extra |
+---------------+--------------+------+-----+---------+-------+
| user_id       | varchar(10)  | NO   | PRI | NULL    |       |
| user_password | varchar(100) | NO   |     | NULL    |       |
| user_name     | varchar(45)  | NO   |     | NULL    |       |
+---------------+--------------+------+-----+---------+-------+
3 rows in set (0.00 sec)


